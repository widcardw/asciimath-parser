import type { IMathVdom } from './mathml'
import { MathVdom } from './mathml'

enum TokenTypes {
  NumberLiteral = 'NumberLiteral',
  StringLiteral = 'StringLiteral',
  Text = 'Text',
  Const = 'Const',
  OperatorOA = 'OperatorA', // abs(a)
  OperatorOAB = 'OperatorOAB', // frac(a)(b)
  OperatorAOB = 'OperatorAOB', // div
  OperatorMinus = 'OperatorMinus', // "e"^-x
  OperatorAO = 'OperatorAO', // n!, n!!
  OperatorO2 = 'OperatorOptionalTwoParams',
  OperatorSup = 'OperatorSup', // a^n, a_n
  OperatorPartial = 'OperatorPartial',
  LParen = 'LParen',
  RParen = 'RParen',
  Paren = 'Paren',
  Align = 'Align',
  Split = 'Split',
  None = 'None',
}

interface SymbolValueType {
  type: TokenTypes
  tex: string
  eatNext?: boolean
  mathml?: IMathVdom
}

const { brace, before, after, binary } = MathVdom

const SYMBOLMAP: Map<string, SymbolValueType> = new Map([
  ['alpha', { type: TokenTypes.Const, tex: '\\alpha', mathml: {tag: 'mi', children: '\u03B1'} }],
  ['beta', { type: TokenTypes.Const, tex: '\\beta', mathml: { tag: 'mi', children: '\u03B2' }  }],
  ['gamma', { type: TokenTypes.Const, tex: '\\gamma', mathml: { tag: 'mi', children: '\u03B3' } }],
  ['Gamma', { type: TokenTypes.Const, tex: '\\Gamma', mathml: { tag: 'mo', children: '\u0393' } }],
  ['delta', { type: TokenTypes.Const, tex: '\\delta', mathml: { tag: 'mi', children: '\u03B4' } }],
  ['Delta', { type: TokenTypes.Const, tex: '\\Delta',mathml: { tag: 'mo', children: '\u0394' } }],
  ['epsi', { type: TokenTypes.Const, tex: '\\varepsilon', mathml: { tag: 'mi', children: '\u03B5' } }],
  ['epsilon', { type: TokenTypes.Const, tex: '\\epsilon', mathml: { tag: 'mi', children: '\u03F5' }  }],
  ['varepsilon', { type: TokenTypes.Const, tex: '\\varepsilon',mathml: { tag: 'mi', children: '\u03B5' } }],
  ['zeta', { type: TokenTypes.Const, tex: '\\zeta', mathml: { tag: 'mi', children: '\u03B6' } }],
  ['eta', { type: TokenTypes.Const, tex: '\\eta', mathml: { tag: 'mi', children: '\u03B7' } }],
  ['theta', { type: TokenTypes.Const, tex: '\\theta', mathml: { tag: 'mi', children: '\u03B8' } }],
  ['Theta', { type: TokenTypes.Const, tex: '\\Theta', mathml: { tag: 'mo', children: '\u0398' } }],
  ['vartheta', { type: TokenTypes.Const, tex: '\\vartheta', mathml: { tag: 'mi', children: '\u03D1' } }],
  ['iota', { type: TokenTypes.Const, tex: '\\iota', mathml: { tag: 'mi', children: '\u03B9' } }],
  ['kappa', { type: TokenTypes.Const, tex: '\\kappa', mathml: { tag: 'mi', children: '\u03BA' } }],
  ['lambda', { type: TokenTypes.Const, tex: '\\lambda', mathml: { tag: 'mi', children: '\u03BB' } }],
  ['Lambda', { type: TokenTypes.Const, tex: '\\Lambda', mathml: { tag: 'mo', children: '\u039B' } }],
  ['mu', { type: TokenTypes.Const, tex: '\\mu', mathml: { tag: 'mi', children: '\u03BC' } }],
  ['nu', { type: TokenTypes.Const, tex: '\\nu', mathml: { tag: 'mi', children: '\u03BD' } }],
  ['xi', { type: TokenTypes.Const, tex: '\\xi', mathml: { tag: 'mi', children: '\u03BE' } }],
  ['Xi', { type: TokenTypes.Const, tex: '\\Xi', mathml: { tag: 'mo', children: '\u039E' } }],
  ['pi', { type: TokenTypes.Const, tex: '\\pi', mathml: { tag: 'mi', children: '\u03C0' } }],
  ['Pi', { type: TokenTypes.Const, tex: '\\Pi', mathml: { tag: 'mo', children: '\u03A0' } }],
  ['rho', { type: TokenTypes.Const, tex: '\\rho', mathml: { tag: 'mi', children: '\u03C1' } }],
  ['sigma', { type: TokenTypes.Const, tex: '\\sigma', mathml: { tag: 'mi', children: '\u03C3' } }],
  ['Sigma', { type: TokenTypes.Const, tex: '\\Sigma', mathml: { tag: 'mo', children: '\u03A3' } }],
  ['tau', { type: TokenTypes.Const, tex: '\\tau', mathml: { tag: 'mi', children: '\u03C4' } }],
  ['upsilon', { type: TokenTypes.Const, tex: '\\upsilon', mathml: { tag: 'mi', children: '\u03C5' } }],
  ['phi', { type: TokenTypes.Const, tex: '\\phi', mathml: { tag: 'mi', children: '\u03D5' } }],
  ['varphi', { type: TokenTypes.Const, tex: '\\varphi', mathml: { tag: 'mi', children: '\u03C6' } }],
  ['varPhi', { type: TokenTypes.Const, tex: '\\varPhi', mathml: { tag: 'mi', children: '\u03A6' } }],
  ['Phi', { type: TokenTypes.Const, tex: '\\Phi', mathml: { tag: 'mo', children: '\u03A6' } }],
  ['chi', { type: TokenTypes.Const, tex: '\\chi', mathml: { tag: 'mi', children: '\u03C7' } }],
  ['psi', { type: TokenTypes.Const, tex: '\\psi', mathml: { tag: 'mi', children: '\u03C8' } }],
  ['Psi', { type: TokenTypes.Const, tex: '\\Psi', mathml: { tag: 'mo', children: '\u03A8' } }],
  ['omega', { type: TokenTypes.Const, tex: '\\omega', mathml: { tag: 'mi', children: '\u03C9' } }],
  ['Omega', { type: TokenTypes.Const, tex: '\\Omega', mathml: { tag: 'mo', children: '\u03A9' } }],
  ['***', { type: TokenTypes.Const, tex: '\\star', mathml: { tag: 'mo', children: '\u22C6' } }],
  ['star', { type: TokenTypes.Const, tex: '\\star', mathml: { tag: 'mo', children: '\u22C6' } }],
  ['**', { type: TokenTypes.Const, tex: '\\ast', mathml: { tag: 'mo', children: '\u2217' } }],
  ['ast', { type: TokenTypes.Const, tex: '\\ast', mathml: { tag: 'mo', children: '\u2217' } }],
  ['*', { type: TokenTypes.Const, tex: '\\cdot', mathml: { tag: 'mo', children: '\u22C5' } }],
  ['cdot', { type: TokenTypes.Const, tex: '\\cdot', mathml: { tag: 'mo', children: '\u22C5' } }],
  ['//', { type: TokenTypes.Const, tex: '{/}', mathml: { tag: 'mo', children: '/' } }],
  ['\\\\', { type: TokenTypes.Const, tex: '\\backslash', mathml: { tag: 'mo', children: '\\' } }],
  ['setminus', { type: TokenTypes.Const, tex: '\\setminus', mathml: { tag: 'mo', children: '\\' } }],
  ['xx', { type: TokenTypes.Const, tex: '\\times', mathml: { tag: 'mo', children: '\u00D7' } }],
  ['|><', { type: TokenTypes.Const, tex: '\\ltimes', mathml: { tag: 'mo', children: '\u22C9' }  }],
  ['><|', { type: TokenTypes.Const, tex: '\\rtimes', mathml: { tag: 'mo', children: '\u22CA' }  }],
  ['|><|', { type: TokenTypes.Const, tex: '\\bowtie', mathml: { tag: 'mo', children: '\u22C8' } }],
  ['-:', { type: TokenTypes.Const, tex: '\\div', mathml: { tag: 'mo', children: '\u00F7' } }],
  ['@', { type: TokenTypes.Const, tex: '\\circ', mathml: { tag: 'mo', children: '\u2218' } }],
  ['o+', { type: TokenTypes.Const, tex: '\\oplus', mathml: { tag: 'mo', children: '\u2295' } }],
  ['ox', { type: TokenTypes.Const, tex: '\\otimes', mathml: { tag: 'mo', children: '\u2297' }  }],
  ['o.', { type: TokenTypes.Const, tex: '\\odot', mathml: { tag: 'mo', children: '\u2299' } }],
  ['sum', { type: TokenTypes.Const, tex: '\\sum', mathml: { tag: 'mo', children: '\u2211' } }],
  ['prod', { type: TokenTypes.Const, tex: '\\prod', mathml: { tag: 'mo', children: '\u220F' } }],
  ['^^', { type: TokenTypes.Const, tex: '\\wedge', mathml: { tag: 'mo', children: '\u2227' } }],
  ['^^^', { type: TokenTypes.Const, tex: '\\bigwedge', mathml: { tag: 'mo', children: '\u22C0' } }],
  ['vv', { type: TokenTypes.Const, tex: '\\vee', mathml: { tag: 'mo', children: '\u2228' } }],
  ['vvv', { type: TokenTypes.Const, tex: '\\bigvee', mathml: { tag: 'mo', children: '\u22C1' } }],
  ['nn', { type: TokenTypes.Const, tex: '\\cap', mathml: { tag: 'mo', children: '\u2229' } }],
  ['nnn', { type: TokenTypes.Const, tex: '\\bigcap', mathml: { tag: 'mo', children: '\u22C2' } }],
  ['uu', { type: TokenTypes.Const, tex: '\\cup', mathml: { tag: 'mo', children: '\u222A' } }],
  ['uuu', { type: TokenTypes.Const, tex: '\\bigcup', mathml: { tag: 'mo', children: '\u22C3' } }],
  ['!=', { type: TokenTypes.Const, tex: '\\ne', mathml: { tag: 'mo', children: '\u2260' } }],
  ['lt', { type: TokenTypes.Const, tex: '<', mathml: { tag: 'mo', children: '&lt;' } }],
  ['<=', { type: TokenTypes.Const, tex: '\\leqslant', mathml: { tag: 'mo', children: '\u2A7D' } }],
  ['le', { type: TokenTypes.Const, tex: '\\le', mathml: { tag: 'mo', children: '\u2264' } }],
  ['gt', { type: TokenTypes.Const, tex: '>', mathml: { tag: 'mo', children: '&gt;' } }],
  ['>=', { type: TokenTypes.Const, tex: '\\geqslant', mathml: { tag: 'mo', children: '\u2A7E' } }],
  ['ge', { type: TokenTypes.Const, tex: '\\ge', mathml: { tag: 'mo', children: '\u2265' } }],
  ['-<', { type: TokenTypes.Const, tex: '\\prec', mathml: { tag: 'mo', children: '\u227A' } }],
  ['>-', { type: TokenTypes.Const, tex: '\\succ', mathml: { tag: 'mo', children: '\u227B' } }],
  ['-<=', { type: TokenTypes.Const, tex: '\\preceq', mathml: { tag: 'mo', children: '\u2AAF' } }],
  ['>-=', { type: TokenTypes.Const, tex: '\\succeq', mathml: { tag: 'mo', children: '\u2AB0' } }],
  ['in', { type: TokenTypes.Const, tex: '\\in', mathml: { tag: 'mo', children: '\u2208' } }],
  ['!in', { type: TokenTypes.Const, tex: '\\notin', mathml: { tag: 'mo', children: '\u2209' } }],
  ['sub', { type: TokenTypes.Const, tex: '\\subset', mathml: { tag: 'mo', children: '\u2282' } }],
  ['sup', { type: TokenTypes.Const, tex: '\\supset', mathml: { tag: 'mo', children: '\u2283' } }],
  ['sube', { type: TokenTypes.Const, tex: '\\subseteq', mathml: { tag: 'mo', children: '\u2286' } }],
  ['supe', { type: TokenTypes.Const, tex: '\\supseteq', mathml: { tag: 'mo', children: '\u2287' } }],
  ['-=', { type: TokenTypes.Const, tex: '\\equiv', mathml: { tag: 'mo', children: '\u2261' } }],
  ['~=', { type: TokenTypes.Const, tex: '\\cong', mathml: { tag: 'mo', children: '\u2245' } }],
  ['~', { type: TokenTypes.Const, tex: '\\sim', mathml: { tag: 'mo', children: '~' } }],
  ['~~', { type: TokenTypes.Const, tex: '\\approx', mathml: { tag: 'mo', children: '\u2248' } }],
  ['\\#', { type: TokenTypes.Const, tex: '\\#', mathml: { tag: 'mo', children: '#' } }],
  ['\\&', { type: TokenTypes.Const, tex: '\\&', mathml: { tag: 'mo', children: '&amp;' } }],
  ['\\@', { type: TokenTypes.Const, tex: '@', mathml: { tag: 'mo', children: '@' } }],
  ['\\%', { type: TokenTypes.Const, tex: '\\%', mathml: { tag: 'mo', children: '%' } }],
  ['%', { type: TokenTypes.Const, tex: '\\%', mathml: { tag: 'mo', children: '%' } }],
  ['\\_', { type: TokenTypes.Const, tex: '\\_', mathml: { tag: 'mo', children: '_' } }],
  ['\\^', { type: TokenTypes.Const, tex: '\\^', mathml: { tag: 'mo', children: '^' } }],
  ['\\$', { type: TokenTypes.Const, tex: '\\$', mathml: { tag: 'mo', children: '$' } }],
  ['\\ ', { type: TokenTypes.Const, tex: '\\ ', mathml: { tag: 'mspace', attr: { width: '1ex' } } }],
  ['\\,', { type: TokenTypes.Const, tex: '\\,', mathml: { tag: 'mspace', attr: { width: '0.17em' } } }],
  ['\\;', { type: TokenTypes.Const, tex: '\\;', mathml: { tag: 'mspace', attr: { width: '0.28em' } } }],
  ['\\:', { type: TokenTypes.Const, tex: '\\:', mathml: { tag: 'mspace', attr: { width: '0.22em' } } }],
  ['\\!', { type: TokenTypes.Const, tex: '\\!', mathml: { tag: 'mspace', attr: { width: '-0.17em' } } }],
  ['enspace', { type: TokenTypes.Const, tex: '\\enspace', mathml: { tag: 'mspace', attr: { width: '0.5em' } } }],
  ['hspace', { type: TokenTypes.OperatorOA, tex: '\\hspace{$1}', eatNext: true, mathml: { tag: 'mspace', attr: { width: '$1' }, children: '' } }],
  ['prop', { type: TokenTypes.Const, tex: '\\propto', mathml: { tag: 'mo', children: '\u221D' } }],
  ['comp', { type: TokenTypes.Const, tex: '\\complement', mathml: { tag: 'mo', children: '\u2201' } }],
  ['complement', { type: TokenTypes.Const, tex: '\\complement' , mathml: { tag: 'mo', children: '\u2201' }}],

  ['if', { type: TokenTypes.Text, tex: 'if\\quad', mathml: { tag: 'mrow', children: [{ tag: 'mtext', children: 'if' }, { tag: 'mspace', attr: { width: '1ex' } }] } }],
  ['otherwise', { type: TokenTypes.Text, tex: 'otherwise\\quad', mathml: { tag: 'mrow', children: [{ tag: 'mtext', children: 'otherwise' }, { tag: 'mspace', attr: { width: '1ex' } }] }  }],
  ['and', { type: TokenTypes.Text, tex: ' and ', mathml: { tag: 'mo', children: 'and' } }],
  ['or', { type: TokenTypes.Text, tex: ' or ', mathml: { tag: 'mo', children: 'or' } }],
  ['not', { type: TokenTypes.Const, tex: '\\neg', mathml: { tag: 'mo', children: '\u00AC' } }],
  ['=>', { type: TokenTypes.Const, tex: '\\implies', mathml: { tag: 'mo', children: '\u21D2' } }],
  ['~>', { type: TokenTypes.Const, tex: '\\rightsquigarrow', mathml: { tag: 'mo', children: '\u21DD' } }],
  ['-/->', { type: TokenTypes.Const, tex: '\\nrightarrow', mathml: { tag: 'mo', children: '\u219B' } }],
  ['<-/-', { type: TokenTypes.Const, tex: '\\nleftarrow', mathml: { tag: 'mo', children: '\u219A'} }],
  ['<-/->', { type: TokenTypes.Const, tex: '\\nleftrightarrow' , mathml: { tag: 'mo', children: '\u21AE'}}],
  ['<=>', { type: TokenTypes.Const, tex: '\\iff', mathml: { tag: 'mo', children: '\u21D4' } }],
  ['iff', { type: TokenTypes.Const, tex: '\\iff', mathml: { tag: 'mo', children: '\u21D4' } }],
  ['AA', { type: TokenTypes.Const, tex: '\\forall', mathml: { tag: 'mo', children: '\u2200' } }],
  ['EE', { type: TokenTypes.Const, tex: '\\exists', mathml: { tag: 'mo', children: '\u2203' } }],
  ['_|_', { type: TokenTypes.Const, tex: '\\bot', mathml: { tag: 'mo', children: '\u22A5' } }],
  ['TT', { type: TokenTypes.Const, tex: '\\top', mathml: { tag: 'mo', children: '\u22A4' } }],
  ['|--', { type: TokenTypes.Const, tex: '\\vdash', mathml: { tag: 'mo', children: '\u22A2' } }],
  ['|==', { type: TokenTypes.Const, tex: '\\models', mathml: { tag: 'mo', children: '\u22A8' } }],

  ['int', { type: TokenTypes.Const, tex: '\\int', mathml: { tag: 'mo', children: '\u222B' } }],
  ['oint', { type: TokenTypes.Const, tex: '\\oint', mathml: { tag: 'mo', children: '\u222E' } }],
  ['del', { type: TokenTypes.Const, tex: '\\partial', mathml: { tag: 'mo', children: '\u2202' } }],
  ['grad', { type: TokenTypes.Const, tex: '\\nabla', mathml: { tag: 'mo', children: '\u2207' }  }],
  ['+-', { type: TokenTypes.Const, tex: '\\pm', mathml: { tag: 'mo', children: '\u00B1' } }],
  ['-+', { type: TokenTypes.Const, tex: '\\mp', mathml: { tag: 'mo', children: '\u2213' } }],
  ['O/', { type: TokenTypes.Const, tex: '\\varnothing', mathml: { tag: 'mo', children: '\u2205' } }],
  ['oo', { type: TokenTypes.Const, tex: '\\infty', mathml: { tag: 'mo', children: '\u221E' } }],
  ['aleph', { type: TokenTypes.Const, tex: '\\aleph' , mathml: { tag: 'mo', children: '\u2135' }}],
  ['...', { type: TokenTypes.Const, tex: '\\ldots', mathml: { tag: 'mo', children: '...' } }],
  [':.', { type: TokenTypes.Const, tex: '\\therefore', mathml: { tag: 'mo', children: '\u2234' } }],
  [':\'', { type: TokenTypes.Const, tex: '\\because', mathml: { tag: 'mo', children: '\u2235' } }],
  ['/_', { type: TokenTypes.Const, tex: '\\angle', mathml: { tag: 'mo', children: '\u2220' } }],
  ['/_\\', { type: TokenTypes.Const, tex: '\\triangle', mathml: { tag: 'mo', children: '\u25B3' } }],
  ['quad', { type: TokenTypes.Const, tex: '\\quad', mathml: { tag: 'mspace', attr: { width: '1em' } } }],
  ['qquad', { type: TokenTypes.Const, tex: '\\qquad', mathml: { tag: 'mspace', attr: { width: '2em' } } }],
  ['cdots', { type: TokenTypes.Const, tex: '\\cdots', mathml: { tag: 'mo', children: '\u22EF' }  }],
  ['vdots', { type: TokenTypes.Const, tex: '\\vdots', mathml: { tag: 'mo', children: '\u22EE' } }],
  ['ddots', { type: TokenTypes.Const, tex: '\\ddots', mathml: { tag: 'mo', children: '\u22F1' } }],
  ['diamond', { type: TokenTypes.Const, tex: '\\diamond', mathml: { tag: 'mo', children: '\u22C4' } }],
  ['Lap', { type: TokenTypes.Const, tex: '\\mathscr{L}', mathml: { tag: 'mstyle', attr: { mathvariant: 'script' }, children: 'L' } }],
  ['square', { type: TokenTypes.Const, tex: '\\square', mathml: { tag: 'mo', children: '\u25A1' } }],
  ['|__', { type: TokenTypes.LParen, tex: '\\lfloor', mathml: { tag: 'mo', children: '\u230A' } }],
  ['__|', { type: TokenTypes.RParen, tex: '\\rfloor', mathml: { tag: 'mo', children: '\u230B' } }],
  ['|~', { type: TokenTypes.LParen, tex: '\\lceil', mathml: { tag: 'mo', children: '\u2308' } }],
  ['~|', { type: TokenTypes.RParen, tex: '\\rceil', mathml: { tag: 'mo', children: '\u2309' } }],
  ['CC', { type: TokenTypes.Const, tex: '\\mathbb{C}', mathml: { tag: 'mo', children: '\u2102' } }],
  ['NN', { type: TokenTypes.Const, tex: '\\mathbb{N}', mathml: { tag: 'mo', children: '\u2115' } }],
  ['QQ', { type: TokenTypes.Const, tex: '\\mathbb{Q}', mathml: { tag: 'mo', children: '\u211A' } }],
  ['RR', { type: TokenTypes.Const, tex: '\\mathbb{R}', mathml: { tag: 'mo', children: '\u211D' } }],
  ['ZZ', { type: TokenTypes.Const, tex: '\\mathbb{Z}', mathml: { tag: 'mo', children: '\u2124' } }],
  ['\'', { type: TokenTypes.Const, tex: '^{\\prime}', mathml: { tag: 'mo', children: '\u2032' } }],
  ['\'\'', { type: TokenTypes.Const, tex: '^{\\prime\\prime}', mathml: { tag: 'mo', children: '\u2033' } }],
  ['\'\'\'', { type: TokenTypes.Const, tex: '^{\\prime\\prime\\prime}', mathml: { tag: 'mo', children: '\u2034' } }],
  ['lim', { type: TokenTypes.Const, tex: '\\lim', mathml: { tag: 'mo' } }],
  ['sin', { type: TokenTypes.Const, tex: '\\sin', mathml: { tag: 'mo' } }],
  ['cos', { type: TokenTypes.Const, tex: '\\cos', mathml: { tag: 'mo' } }],
  ['tan', { type: TokenTypes.Const, tex: '\\tan', mathml: { tag: 'mo' } }],
  ['sinh', { type: TokenTypes.Const, tex: '\\sinh', mathml: { tag: 'mo' } }],
  ['cosh', { type: TokenTypes.Const, tex: '\\cosh', mathml: { tag: 'mo' } }],
  ['tanh', { type: TokenTypes.Const, tex: '\\tanh', mathml: { tag: 'mo' } }],
  ['cot', { type: TokenTypes.Const, tex: '\\cot', mathml: { tag: 'mo' } }],
  ['sec', { type: TokenTypes.Const, tex: '\\sec', mathml: { tag: 'mo' } }],
  ['csc', { type: TokenTypes.Const, tex: '\\csc', mathml: { tag: 'mo' } }],
  ['arcsin', { type: TokenTypes.Const, tex: '\\arcsin', mathml: { tag: 'mo' } }],
  ['arccos', { type: TokenTypes.Const, tex: '\\arccos', mathml: { tag: 'mo' } }],
  ['arctan', { type: TokenTypes.Const, tex: '\\arctan', mathml: { tag: 'mo' } }],
  ['coth', { type: TokenTypes.Const, tex: '\\coth', mathml: { tag: 'mo' } }],
  ['sech', { type: TokenTypes.Const, tex: '\\operatorname{sech}', mathml: { tag: 'mo' } }],
  ['csch', { type: TokenTypes.Const, tex: '\\operatorname{csch}', mathml: { tag: 'mo' } }],
  ['exp', { type: TokenTypes.Const, tex: '\\exp', mathml: { tag: 'mo' } }],
  ['log', { type: TokenTypes.Const, tex: '\\log', mathml: { tag: 'mo' } }],
  ['ln', { type: TokenTypes.Const, tex: '\\ln', mathml: { tag: 'mo' } }],
  ['det', { type: TokenTypes.Const, tex: '\\det', mathml: { tag: 'mo' } }],
  ['dim', { type: TokenTypes.Const, tex: '\\dim', mathml: { tag: 'mo' } }],
  ['gcd', { type: TokenTypes.Const, tex: '\\gcd', mathml: { tag: 'mo' } }],
  ['lcm', { type: TokenTypes.Const, tex: '\\operatorname{lcm}', mathml: { tag: 'mo' } }],
  ['min', { type: TokenTypes.Const, tex: '\\min', mathml: { tag: 'mo' } }],
  ['max', { type: TokenTypes.Const, tex: '\\max', mathml: { tag: 'mo' } }],
  ['Sup', { type: TokenTypes.Const, tex: '\\sup', mathml: { tag: 'mo' } }],
  ['inf', { type: TokenTypes.Const, tex: '\\inf', mathml: { tag: 'mo' } }],
  ['mod', { type: TokenTypes.Const, tex: '\\operatorname{mod}', mathml: { tag: 'mo' } }],
  ['sgn', { type: TokenTypes.Const, tex: '\\operatorname{sgn}', mathml: { tag: 'mo' } }],
  ['abs', { type: TokenTypes.OperatorOA, tex: '\\left| $1 \\right|', mathml: brace('|', '|') }],
  ['norm', { type: TokenTypes.OperatorOA, tex: '\\left\\| $1 \\right\\|', mathml: brace('\u2225', '\u2225') }],
  ['floor', { type: TokenTypes.OperatorOA, tex: '\\left\\lfloor $1 \\right\\rfloor', mathml: brace('\u230A', '\u230B') }],
  ['ceil', { type: TokenTypes.OperatorOA, tex: '\\left\\lceil $1 \\right\\rceil', mathml: brace('\u2308', '\u2309') }],
  ['uarr', { type: TokenTypes.Const, tex: '\\uparrow', mathml: { tag: 'mo', children: '\u2191' } }],
  ['uparrow', { type: TokenTypes.Const, tex: '\\uparrow', mathml: { tag: 'mo', children: '\u2191' } }],
  ['darr', { type: TokenTypes.Const, tex: '\\downarrow', mathml: { tag: 'mo', children: '\u2193' } }],
  ['downarrow', { type: TokenTypes.Const, tex: '\\downarrow', mathml: { tag: 'mo', children: '\u2193' } }],
  ['rarr', { type: TokenTypes.Const, tex: '\\rightarrow', mathml: { tag: 'mo', children: '\u2192' } }],
  ['rightarrow', { type: TokenTypes.Const, tex: '\\rightarrow', mathml: { tag: 'mo', children: '\u2192' } }],
  ['to', { type: TokenTypes.Const, tex: '\\to', mathml: { tag: 'mo', children: '\u2192' } }],
  ['->', { type: TokenTypes.Const, tex: '\\to', mathml: { tag: 'mo', children: '\u2192' } }],
  ['<-', { type: TokenTypes.Const, tex: '\\gets', mathml: { tag: 'mo', children: '\u2190' } }],
  ['>->', { type: TokenTypes.Const, tex: '\\rightarrowtail', mathml: { tag: 'mo', children: '\u21A3' } }],
  ['->>', { type: TokenTypes.Const, tex: '\\twoheadrightarrow', mathml: { tag: 'mo', children: '\u21A0' } }],
  ['>->>', { type: TokenTypes.Const, tex: '\u2916', mathml: { tag: 'mo', children: '\u2916' } }],
  ['|->', { type: TokenTypes.Const, tex: '\\mapsto', mathml: { tag: 'mo', children: '\u21A6' } }],
  ['larr', { type: TokenTypes.Const, tex: '\\leftarrow', mathml: { tag: 'mo', children: '\u2190' } }],
  ['leftarrow', { type: TokenTypes.Const, tex: '\\leftarrow', mathml: { tag: 'mo', children: '\u2190' } }],
  ['harr', { type: TokenTypes.Const, tex: '\\leftrightarrow', mathml: { tag: 'mo', children: '\u2194' } }],
  ['<->', { type: TokenTypes.Const, tex: '\\leftrightarrow', mathml: { tag: 'mo', children: '\u2194' } }],
  ['rArr', { type: TokenTypes.Const, tex: '\\Rightarrow', mathml: { tag: 'mo', children: '\u21D2' } }],
  ['lArr', { type: TokenTypes.Const, tex: '\\Leftarrow', mathml: { tag: 'mo', children: '\u21D0' } }],
  ['hArr', { type: TokenTypes.Const, tex: '\\Leftrightarrow', mathml: { tag: 'mo', children: '\u21D4' } }],
  ['curvArrLt', { type: TokenTypes.Const, tex: '\\curvearrowleft', mathml: { tag: 'mo', children: '\u21B6' } }],
  ['curvArrRt', { type: TokenTypes.Const, tex: '\\curvearrowright', mathml: { tag: 'mo', children: '\u21B7' } }],
  ['circArrLt', { type: TokenTypes.Const, tex: '\\circlearrowleft', mathml: { tag: 'mo', children: '\u21BA' } }],
  ['circArrRt', { type: TokenTypes.Const, tex: '\\circlearrowright', mathml: { tag: 'mo', children: '\u21BB' } }],

  ['sqrt', { type: TokenTypes.OperatorOA, tex: '\\sqrt{ $1 }', mathml: { tag: 'msqrt' } }],
  ['root', { type: TokenTypes.OperatorOAB, tex: '\\sqrt[ $1 ]{ $2 }', mathml: binary('$2', '$1', 'mroot') }],
  ['frac', { type: TokenTypes.OperatorOAB, tex: '\\frac{ $1 }{ $2 }', mathml: binary('$1', '$2', 'mfrac') }],
  ['/', { type: TokenTypes.OperatorAOB, tex: '\\frac{ $1 }{ $2 }', mathml: binary('$1', '$2', 'mfrac') }],
  ['choose', { type: TokenTypes.OperatorAOB, tex: '{ $1 \\choose $2 }', mathml: {
    tag: 'mrow', 
    children: [
      {tag: 'mo', children: '('}, 
      {tag: 'mfrac', children: [{tag: 'mi', children: '$1'}, {tag: 'mi', children: '$2'}], attr: {linethickness: '0'}}, 
      {tag: 'mo', children: ')'}
    ]
  } }],
  ['_', { type: TokenTypes.OperatorSup, tex: '_{ $1 }' }], // TODO
  ['^', { type: TokenTypes.OperatorSup, tex: '^{ $1 }' }], // TODO
  ['stackrel', { type: TokenTypes.OperatorOAB, tex: '\\stackrel{ $1 }{ $2 }', mathml: binary('$2', '$1', 'mover') }],
  ['overset', { type: TokenTypes.OperatorOAB, tex: '\\overset{ $1 }{ $2 }', mathml: binary('$2', '$1', 'mover') }],
  ['underset', { type: TokenTypes.OperatorOAB, tex: '\\underset{ $1 }{ $2 }' , mathml: binary('$2', '$1', 'munder')}],
  ['hat', { type: TokenTypes.OperatorOA, tex: '\\hat{ $1 }', mathml: after('^', 'mover') }],
  ['\\`', { type: TokenTypes.OperatorOA, tex: '\\`{ $1 }', mathml: after('`', 'mover') }],
  ['widehat', { type: TokenTypes.OperatorOA, tex: '\\widehat{ $1 }', mathml: after('^', 'mover') }],
  ['Hat', { type: TokenTypes.OperatorOA, tex: '\\widehat{ $1 }', mathml: after('^', 'mover') }],
  ['widetilde', { type: TokenTypes.OperatorOA, tex: '\\widetilde{ $1 }', mathml: after('~', 'mover') }],
  ['ol', { type: TokenTypes.OperatorOA, tex: '\\overline{ $1 }', mathml: after('\u00AF', 'mover') }],
  ['overline', { type: TokenTypes.OperatorOA, tex: '\\overline{ $1 }', mathml: after('\u00AF', 'mover') }],
  ['arc', { type: TokenTypes.OperatorOA, tex: '\\stackrel{\\frown}{ $1 }', mathml: after('\u23DC', 'mover') }],
  ['bar', { type: TokenTypes.OperatorOA, tex: '\\bar{ $1 }', mathml: after('\u00AF', 'mover') }],
  ['vec', { type: TokenTypes.OperatorOA, tex: '\\vec{ $1 }', mathml: after('\u2192', 'mover') }],
  ['Vec', { type: TokenTypes.OperatorOA, tex: '\\overrightarrow{ $1 }', mathml: after('\u2192', 'mover') }],
  ['Aec', { type: TokenTypes.OperatorOA, tex: '\\overleftarrow{ $1 }', mathml: after('\u2190', 'mover') }],
  ['tilde', { type: TokenTypes.OperatorOA, tex: '\\tilde{ $1 }', mathml: after('~', 'mover') }],
  ['Tilde', { type: TokenTypes.OperatorOA, tex: '\\widetilde{ $1 }', mathml: after('~', 'mover') }],
  ['dot', { type: TokenTypes.OperatorOA, tex: '\\dot{ $1 }', mathml: after('.', 'mover') }],
  ['ddot', { type: TokenTypes.OperatorOA, tex: '\\ddot{ $1 }', mathml: after('..', 'mover') }],
  ['ul', { type: TokenTypes.OperatorOA, tex: '\\underline{ $1 }', mathml: after('\u0332', 'munder')  }],
  ['underline', { type: TokenTypes.OperatorOA, tex: '\\underline{ $1 }', mathml: after('\u0332', 'munder') }],
  ['underbrace', { type: TokenTypes.OperatorOA, tex: '\\underbrace{ $1 }', mathml: after('\u23DF', 'munder') }],
  ['ubrace', { type: TokenTypes.OperatorOA, tex: '\\underbrace{ $1 }', mathml: after('\u23DF', 'munder') }],
  ['overbrace', { type: TokenTypes.OperatorOA, tex: '\\overbrace{ $1 }', mathml: after('\u23DE', 'mover') }],
  ['obrace', { type: TokenTypes.OperatorOA, tex: '\\overbrace{ $1 }', mathml: after('\u23DE', 'mover') }],
  ['color', { type: TokenTypes.OperatorOAB, tex: '{ \\color{$1} $2 }', eatNext: true, mathml: { tag: 'mstyle', attr: { mathcolor: '$1' }, children: [{ tag: '$2' }] } }],
  ['phantom', { type: TokenTypes.OperatorOA, tex: '\\phantom{$1}', mathml: { tag: 'mphantom' } }],
  ['text', { type: TokenTypes.OperatorOA, tex: '\\text{$1}', eatNext: true, mathml: { tag: 'mtext' } }],
  ['tex', { type: TokenTypes.OperatorOA, tex: '$1', eatNext: true, mathml: { tag: 'mtext' } }], // TODO
  ['op', { type: TokenTypes.OperatorOA, tex: '\\operatorname{ $1 }', eatNext: true, mathml: { tag: 'mo', children: '$1' } }],
  ['cancel', { type: TokenTypes.OperatorOA, tex: '\\cancel{ $1 }', mathml: { tag: 'menclose', attr: { notation: 'updiagonalstrike' } } }],
  ['bb', { type: TokenTypes.OperatorOA, tex: '\\mathbf{ $1 }' , mathml: { tag: 'mstyle', attr: { mathvariant: 'bold' }}}],
  ['mathbf', { type: TokenTypes.OperatorOA, tex: '\\mathbf{ $1 }', mathml: { tag: 'mstyle', attr: { mathvariant: 'bold' }} }],
  ['sf', { type: TokenTypes.OperatorOA, tex: '\\mathsf{ $1 }', mathml: { tag: 'mstyle', attr: { mathvariant: 'sans-serif' } } }],
  ['mathsf', { type: TokenTypes.OperatorOA, tex: '\\mathsf{ $1 }', mathml: { tag: 'mstyle', attr: { mathvariant: 'sans-serif' } } }],
  ['bbb', { type: TokenTypes.OperatorOA, tex: '\\mathbb{ $1 }', mathml: { tag: 'mstyle', attr: { mathvariant: 'double-struck' } }  }],
  ['mathbb', { type: TokenTypes.OperatorOA, tex: '\\mathbb{ $1 }', mathml: { tag: 'mstyle', attr: { mathvariant: 'double-struck' } } }],
  ['cc', { type: TokenTypes.OperatorOA, tex: '\\mathcal{ $1 }', mathml: { tag: 'mstyle', attr: { mathvariant: 'script' } } }],
  ['mathcal', { type: TokenTypes.OperatorOA, tex: '\\mathcal{ $1 }', mathml: { tag: 'mstyle', attr: { mathvariant: 'script' } } }],
  ['tt', { type: TokenTypes.OperatorOA, tex: '\\mathtt{ $1 }', mathml: { tag: 'mstyle', attr: { mathvariant: 'monospace' } } }],
  ['mathtt', { type: TokenTypes.OperatorOA, tex: '\\mathtt{ $1 }', mathml: { tag: 'mstyle', attr: { mathvariant: 'monospace' } } }],
  ['fr', { type: TokenTypes.OperatorOA, tex: '\\mathfrak{ $1 }', mathml: { tag: 'mstyle', attr: { mathvariant: 'fraktur' } } }],
  ['bm', { type: TokenTypes.OperatorOA, tex: '\\boldsymbol{ $1 }', mathml: { tag: 'mstyle', attr: { mathvariant: 'bold-italic' } } }],
  ['rm', { type: TokenTypes.OperatorOA, tex: '\\mathrm{ $1 }', mathml: { tag: 'mstyle', attr: { mathvariant: 'serif' } } }],
  ['scr', { type: TokenTypes.OperatorOA, tex: '\\mathscr{ $1 }', mathml: { tag: 'mstyle', attr: { mathvariant: 'script' } } }],
  ['limits', { type: TokenTypes.OperatorOA, tex: '\\mathop{ $1 }\\limits' }], // TODO

  ['iint', { type: TokenTypes.Const, tex: '\\iint', mathml: { tag: 'mo', children: '\u222C' } }],
  ['iiint', { type: TokenTypes.Const, tex: '\\iiint', mathml: { tag: 'mo', children: '\u222D' } }],
  ['oiint', { type: TokenTypes.Const, tex: '\u222F', mathml: { tag: 'mo', children: '\u222F' }  }],
  ['oiiint', { type: TokenTypes.Const, tex: '\u2230', mathml: { tag: 'mo', children: '\u2230' } }],
  ['laplace', { type: TokenTypes.Const, tex: '\\Delta', mathml: { tag: 'mo', children: '\u0394' } }],
  ['==', { type: TokenTypes.OperatorO2, tex: '\\xlongequal[ $2 ]{ $1 }', mathml: { tag: 'mo', children: '\u2550\u2550' } }],
  ['-->', { type: TokenTypes.OperatorO2, tex: '\\xrightarrow[ $2 ]{ $1 }', mathml: { tag: 'mo', children: '\u2192' } }],
  ['||', { type: TokenTypes.Paren, tex: '\\Vert', mathml: { tag: 'mo', children: '\u2225' } }],
  ['!||', { type: TokenTypes.Const, tex: '\u2226', mathml: { tag: 'mo', children: '\u2226' } }],
  ['S=', { type: TokenTypes.Const, tex: '\u224C', mathml: { tag: 'mo', children: '\u224C' } }],
  ['S~', { type: TokenTypes.Const, tex: '\u223D', mathml: { tag: 'mo', children: '\u223D'} }],
  ['!-=', { type: TokenTypes.Const, tex: '\\not\\equiv', mathml: { tag: 'mo', children: '\u2262' } }],
  ['!|', { type: TokenTypes.Const, tex: '\u2224', mathml: { tag: 'mo', children: '\u2224' } }],
  ['!', { type: TokenTypes.OperatorAO, tex: '{$1 !}', mathml: after('!') }],
  ['!!', { type: TokenTypes.OperatorAO, tex: '{$1 !!}', mathml: after('!!') }],
  ['!sube', { type: TokenTypes.Const, tex: '\\not\\subseteq', mathml: { tag: 'mo', children: '\u2288' } }],
  ['!supe', { type: TokenTypes.Const, tex: '\\not\\supseteq', mathml: { tag: 'mo', children: '\u2289' } }],
  ['subne', { type: TokenTypes.Const, tex: '\\subsetneqq', mathml: { tag: 'mo', children: '\u228A' } }],
  ['supne', { type: TokenTypes.Const, tex: '\\supsetneqq', mathml: { tag: 'mo', children: '\u228B' } }],
  ['lhd', { type: TokenTypes.Const, tex: '\\lhd', mathml: { tag: 'mo', children: '\u22B2' } }],
  ['rhd', { type: TokenTypes.Const, tex: '\\rhd', mathml: { tag: 'mo', children: '\u22B3' } }],
  ['normal', { type: TokenTypes.Const, tex: '\\unlhd', mathml: { tag: 'mo', children: '\u22B4' }}],
  ['rnormal', { type: TokenTypes.Const, tex: '\\unrhd', mathml: { tag: 'mo', children: '\u22B5' }}],

  ['hline', { type: TokenTypes.Const, tex: '\\hline', mathml: { tag: 'mrow' } }],
  ['--', { type: TokenTypes.Const, tex: '\\hline', mathml: { tag: 'mrow' } }],

  ['(', { type: TokenTypes.LParen, tex: '(', mathml: { tag: 'mo' } }],
  [')', { type: TokenTypes.RParen, tex: ')', mathml: { tag: 'mo' } }],
  ['[', { type: TokenTypes.LParen, tex: '[', mathml: { tag: 'mo' } }],
  [']', { type: TokenTypes.RParen, tex: ']', mathml: { tag: 'mo' } }],
  ['{', { type: TokenTypes.LParen, tex: '\\lbrace', mathml: { tag: 'mo' } }],
  ['}', { type: TokenTypes.RParen, tex: '\\rbrace', mathml: { tag: 'mo' } }],
  ['(:', { type: TokenTypes.LParen, tex: '\\langle', mathml: { tag: 'mo', children: '\u2329' } }],
  [':)', { type: TokenTypes.RParen, tex: '\\rangle', mathml: { tag: 'mo', children: '\u232A' } }],
  ['{:', { type: TokenTypes.LParen, tex: '.', mathml: { tag: 'mo', children: '' } }],
  [':}', { type: TokenTypes.RParen, tex: '.', mathml: { tag: 'mo', children: '' } }],
  // can be used as det or a single bar
  ['|', { type: TokenTypes.Paren, tex: '|', mathml: { tag: 'mo', children: '|' } }],

  // ['"', { type: TokenTypes.Paren, tex: '\\text{ $1 }' }],

  ['&', { type: TokenTypes.Align, tex: '&' }], // TODO
  ['&&', { type: TokenTypes.Align, tex: '&&' }], // TODO
  [',', { type: TokenTypes.Split, tex: ',' }], // TODO
  [';', { type: TokenTypes.Split, tex: ';' }], // TODO

  ['-', { type: TokenTypes.OperatorMinus, tex: '{-$1 }', mathml: { tag: 'mo' } }], // TODO
  ['+', { type: TokenTypes.OperatorMinus, tex: '{+$1 }', mathml: { tag: 'mo' } }], // TODO

  ['part', { type: TokenTypes.OperatorPartial, tex: '\\partial', mathml: { tag: 'mo', children: '\u2202' } }],
  ['pp', { type: TokenTypes.OperatorPartial, tex: '\\partial', mathml: { tag: 'mo', children: '\u2202' } }],
  ['dd', { type: TokenTypes.OperatorPartial, tex: '\\mathrm{d}', mathml: { tag: 'mtext', children: 'd' } }],

  ['tiny', { type: TokenTypes.OperatorOA, tex: '{\\tiny $1 }' }], // TODO: mstyle
  ['small', { type: TokenTypes.OperatorOA, tex: '{\\small $1 }' }], // TODO: mstyle
  ['large', { type: TokenTypes.OperatorOA, tex: '{\\large $1 }' }], // TODO: mstyle
  ['huge', { type: TokenTypes.OperatorOA, tex: '{\\huge $1 }' }], // TODO: mstyle

])

export {
  TokenTypes,
  SYMBOLMAP,
  type SymbolValueType,
}
